# Default Docker Compose config:
# runs GHC Web App (ghc_web) and GHC Daemon Runner (ghc_runner) Docker containers
# with SQLite backend.  ghc_runner will run using the schedule
# configured in the GHC Web App.
version: "3"

services:
  ghc_web:
    image: geopython/geohealthcheck:latest

    container_name: ghc_web

    restart: unless-stopped

    ports:
      - 8083:80

    env_file:
      - ghc.env

    volumes:
      #- ghc_sqlitedb:/GeoHealthCheck/DB
      - ./ghc_sqlitedb:/GeoHealthCheck/DB
      # Optional Plugins, using Path on the host, relative to this Compose file
      # To activate: 2 steps for runner and GHC webapp:
      # - configure in ghc.env
      # - mount these as docker volume on host
      # See https://docs.docker.com/compose/compose-file/#volumes
      # - ./../GeoHealthCheck/plugins:/plugins:ro

    networks:
      - default

  ghc_runner:
    image: geopython/geohealthcheck:latest

    container_name: ghc_runner

    restart: unless-stopped

    env_file:
      - ghc.env

    entrypoint:
      - /run-runner.sh

    volumes:
      - ghc_sqlitedb:/GeoHealthCheck/DB
      # Optional Plugins, using Path on the host, relative to this Compose file
      # To activate 2 steps:
      # - configure in ghc.env
      # - mount these as docker volume on host
      # See https://docs.docker.com/compose/compose-file/#volumes
      # - ./../GeoHealthCheck/plugins:/plugins:ro

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - /etc/letsencrypt/:/etc/letsencrypt/
      - /etc/ssl/certs/dhparam.pem:/etc/ssl/certs/dhparam.pem
      - ./nginx/options-ssl-nginx.conf:/etc/options-ssl-nginx.conf
#    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
#    restart: unless-stopped
#    depends_on:
#      - ghc_web
    networks:
      - default

# docker-compose v2+ needs separate volumes section
volumes:
  ghc_sqlitedb:

networks:
  default:
    driver: bridge
